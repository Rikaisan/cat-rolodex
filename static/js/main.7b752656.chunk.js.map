{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","filter","searchFilter","trim","toLowerCase","includes","map","SearchBox","placeholder","changeHandler","type","onChange","App","updateSearchField","event","setState","searchField","target","value","state","a","fetch","data","json","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAGaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACC,sBAAKC,UAAU,OAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAQG,GAAlC,aACHC,IAAI,iBAEL,6BAAKJ,EAAQK,MAAQ,WACrB,4BAAIL,EAAQM,YCPFC,EAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SACpBC,EADiD,EAAnBC,aACRC,OAAOC,cAKnC,OAJAJ,EAAWA,EAASC,QAAO,SAACT,GAAD,OAC1BA,EAAQK,KAAKO,cAAcC,SAASJ,MAIpC,qBAAKR,UAAU,YAAf,SACEO,EAASM,KAAI,SAACd,GAAD,OACb,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQG,UCV5BY,G,MAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACxC,OACC,uBACChB,UAAU,aACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCJPG,G,wDACL,aAAe,IAAD,8BACb,gBAaDC,kBAAoB,SAACC,GAAD,OACnB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACZnB,SAAU,GACVgB,YAAa,IAJD,E,4FAQd,4BAAAI,EAAA,sEACkBC,MAAM,8CADxB,cACKC,EADL,gBAEcA,EAAKC,OAFnB,OAECD,EAFD,OAGCE,KAAKT,SAAS,CAAEf,SAAUsB,IAH3B,gD,0EASA,WACC,OACC,sBAAK7B,UAAU,MAAf,UACC,6CACA,cAAC,EAAD,CACCe,YAAY,iBACZC,cAAee,KAAKX,oBAEnBW,KAAKL,MAAMnB,SAASyB,OAAS,GAC9B,cAAC,EAAD,CACCzB,SAAUwB,KAAKL,MAAMnB,SACrBE,aAAcsB,KAAKL,MAAMH,eAErB,mD,GA/BQU,cAqCHd,IC9BAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.7b752656.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = ({ monster }) => {\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<img\r\n\t\t\t\tsrc={`https://robohash.org/${monster.id}?set=set4`}\r\n\t\t\t\talt='Profile Icon'\r\n\t\t\t/>\r\n\t\t\t<h2>{monster.name || 'Gatito'}</h2>\r\n\t\t\t<p>{monster.email}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = ({ monsters, searchFilter }) => {\r\n\tconst filter = searchFilter.trim().toLowerCase();\r\n\tmonsters = monsters.filter((monster) =>\r\n\t\tmonster.name.toLowerCase().includes(filter)\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='card-list'>\r\n\t\t\t{monsters.map((monster) => (\r\n\t\t\t\t<Card monster={monster} key={monster.id} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import './search-box.styles.css';\r\nimport React from 'react';\r\n\r\nexport const SearchBox = ({ placeholder, changeHandler }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName='search-box'\r\n\t\t\ttype='search'\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tonChange={changeHandler}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: '',\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tlet data = await fetch('https://jsonplaceholder.typicode.com/users');\n\t\tdata = await data.json();\n\t\tthis.setState({ monsters: data });\n\t}\n\n\tupdateSearchField = (event) =>\n\t\tthis.setState({ searchField: event.target.value });\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Cat Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='Search cats...'\n\t\t\t\t\tchangeHandler={this.updateSearchField}\n\t\t\t\t/>\n\t\t\t\t{(this.state.monsters.length > 0 && (\n\t\t\t\t\t<CardList\n\t\t\t\t\t\tmonsters={this.state.monsters}\n\t\t\t\t\t\tsearchFilter={this.state.searchField}\n\t\t\t\t\t/>\n\t\t\t\t)) || <h1>Loading...</h1>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}